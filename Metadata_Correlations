#correlate all metadata
#Pearson's correlations
sample_info <- read.xlsx("/Users/juliamouat/Library/Mobile Documents/com~apple~CloudDocs/LaSalle Lab/MARBLES /MARBLES PCB/Paper/Comethyl/V1/sample_info.xlsx", sheet = 1, rowNames = TRUE)
sample_info.cor = cor(sample_info, use = 'pairwise.complete.obs')
install.packages("Hmisc")
library(Hmisc)
library(RcmdrMisc)
library(psych)
sample_info <- read.xlsx("sample_info.xlsx", rowNames = TRUE) 
sample_info.rcorr = rcorr(as.matrix(sample_info), type = "pearson")
sample_info.coeff = sample_info.rcorr$r
sample_info.p = sample_info.rcorr$P
sample_info_fdr <- corr.test(sample_info, y = NULL, use = "pairwise", method = "pearson", adjust = "fdr", alpha = 0.05)
sample_info_fdr_p <- sample_info_fdr$p
Pearson <- list('Coefficients' = as.data.frame(sample_info.coeff), 'p Values' = as.data.frame(sample_info.p), 'FDR p Values' = as.data.frame(sample_info_fdr_p))
write.xlsx(Pearson, "Pearson_results_test.xlsx", rowNames = TRUE, colNames = TRUE)


#make heatmap of metadata trait Pearson correlations with traits in categories, hierarchical clustering within categories 
library(ggplot2)
library(reshape)
trait_correlations_ggplot <- melt(sample_info.coeff)
pdf("traits_ggplot_categorized.pdf", width = 12, height = 8)
trait_heatmap_ggplot <- ggplot(data = trait_correlations_ggplot, aes(x = variable, y = Trait, fill=value)) +
  geom_tile() +
  scale_fill_gradientn(colors = WGCNA::blueWhiteRed(100, gamma = 0.9), limits = c(-1, 1), name = "Pearson") +
  labs(x="", y="") +
  coord_fixed() +
  theme(axis.text = element_text(color = "black"), panel.border = element_rect(colour = "black", fill=NA, size=1.25), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.justification = "top") +
  scale_x_discrete(limits = c('MomBirthPlace', 'DadBirthPlace', 'MomRace', 'DadRace',  'DadAge', 'MomAge', 'HomeOwnership',
                              'MomEducation', 'DeliveryPayer', 'DadEducation', 'Sex', 'DadHispanic', 'MomHispanic', 
                              'GestationalDiabetes', 'PreEclampsia', 'ChronicHypertension', 'MaternalBMI',
                              'MaternalOmega3s', 'MaternalPlasmaPUFA', 'PrenatalVitamin', 'SmokePregnancy',
                              'DeliveryMethod', 'BirthMonth', 'BirthSeason', 'BirthYear', 'Parity', 'Apgar5min', 'Apgar1min',   
                              'BirthWeight', 'BirthLength', 'GestationalAgeDelivery', 'AgeMullen', 'AgeADOS', 'MullenScore', 'ADOScs', 'DiagnosisASD')) +
  
  scale_y_discrete(limits = c('DiagnosisASD', 'ADOScs', 'MullenScore', 'AgeADOS', 'AgeMullen', 'GestationalAgeDelivery', 'BirthLength', 'BirthWeight',
                              'Apgar1min', 'Apgar5min', 'Parity', 'BirthYear', 'BirthSeason', 'BirthMonth', 'DeliveryMethod',
                              'SmokePregnancy', 'PrenatalVitamin', 'MaternalPlasmaPUFA', 'MaternalOmega3s', 
                              'MaternalBMI', 'ChronicHypertension', 'PreEclampsia', 'GestationalDiabetes',
                              'MomHispanic', 'DadHispanic', 'Sex', 'DadEducation', 'DeliveryPayer', 'MomEducation',
                              'HomeOwnership', 'MomAge', 'DadAge', 'DadRace', 'MomRace', 'DadBirthPlace', 'MomBirthPlace'))
trait_heatmap_ggplot
dev.off()


#correlate all metadata
#Spearman correlations
sample_info <- read.xlsx("sample_info.xlsx", rowNames = TRUE) 
sample_info.rcorr = rcorr(as.matrix(sample_info), type = "spearman")
sample_info.coeff = sample_info.rcorr$r
sample_info.p = sample_info.rcorr$P
sample_info_fdr <- corr.test(sample_info, y = NULL, use = "pairwise", method = "spearman", adjust = "fdr", alpha = 0.05)
sample_info_fdr_p <- sample_info_fdr$p
Spearman <- list('Coefficients' = as.data.frame(sample_info.coeff), 'p Values' = as.data.frame(sample_info.p), 'FDR p Values' = as.data.frame(sample_info_fdr_p))
write.xlsx(Spearman, "Spearman_results_test.xlsx", rowNames = TRUE, colNames = TRUE)

#make heatmap of metadata trait Spearman correlations with traits in categories, hierarchical clustering within categories 
library(ggplot2)
library(reshape)
trait_correlations_ggplot <- melt(sample_info.coeff)
trait_correlations_ggplot$fdr <- 
pdf("traits_ggplot_categorized_Spearman.pdf", width = 12, height = 8)
trait_heatmap_ggplot <- ggplot(data = trait_correlations_ggplot, aes(x = variable, y = X1, fill=value)) +
  geom_tile() +
  scale_fill_gradientn(colors = WGCNA::blueWhiteRed(100, gamma = 0.9), limits = c(-1, 1), name = "Spearman") +
  labs(x="", y="") +
  coord_fixed() +
  theme(axis.text = element_text(color = "black"), panel.border = element_rect(colour = "black", fill=NA, size=1.25), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.justification = "top") +
  scale_x_discrete(limits = c('MomBirthPlace', 'DadBirthPlace', 'MomRace', 'DadRace',  'DadAge', 'MomAge', 'HomeOwnership',
                              'MomEducation', 'DeliveryPayer', 'DadEducation', 'Sex', 'DadHispanic', 'MomHispanic', 
                              'GestationalDiabetes', 'PreEclampsia', 'ChronicHypertension', 'MaternalBMI',
                              'MaternalOmega3s', 'MaternalPlasmaPUFA', 'PrenatalVitamin', 'SmokePregnancy',
                              'DeliveryMethod', 'BirthMonth', 'BirthSeason', 'BirthYear', 'Parity', 'Apgar5min', 'Apgar1min',   
                              'BirthWeight', 'BirthLength', 'GestationalAgeDelivery', 'AgeMullen', 'AgeADOS', 'MullenScore', 'ADOScs', 'DiagnosisASD')) +
  
  scale_y_discrete(limits = c('DiagnosisASD', 'ADOScs', 'MullenScore', 'AgeADOS', 'AgeMullen', 'GestationalAgeDelivery', 'BirthLength', 'BirthWeight',
                              'Apgar1min', 'Apgar5min', 'Parity', 'BirthYear', 'BirthSeason', 'BirthMonth', 'DeliveryMethod',
                              'SmokePregnancy', 'PrenatalVitamin', 'MaternalPlasmaPUFA', 'MaternalOmega3s', 
                              'MaternalBMI', 'ChronicHypertension', 'PreEclampsia', 'GestationalDiabetes',
                              'MomHispanic', 'DadHispanic', 'Sex', 'DadEducation', 'DeliveryPayer', 'MomEducation',
                              'HomeOwnership', 'MomAge', 'DadAge', 'DadRace', 'MomRace', 'DadBirthPlace', 'MomBirthPlace'))
trait_heatmap_ggplot
dev.off()

